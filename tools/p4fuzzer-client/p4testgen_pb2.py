# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: p4testgen.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from p4_test.v1 import p4runtime_pb2 as p4_dot_v1_dot_p4runtime__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='p4testgen.proto',
  package='p4testgen',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0fp4testgen.proto\x12\tp4testgen\x1a\x15p4/v1/p4runtime.proto\"%\n\x12HealthCheckRequest\x12\x0f\n\x07service\x18\x01 \x01(\t\"%\n\x13HealthCheckResponse\x12\x0e\n\x06status\x18\x01 \x01(\x05\"4\n\rP4NameRequest\x12\x13\n\x0b\x65ntity_type\x18\x01 \x01(\x05\x12\x0e\n\x06target\x18\x02 \x01(\t\"O\n\x0bP4NameReply\x12\x13\n\x0b\x65ntity_type\x18\x01 \x01(\x05\x12\x0c\n\x04name\x18\x02 \x03(\t\x12\x0c\n\x04type\x18\x03 \x03(\t\x12\x0f\n\x07\x62it_len\x18\x04 \x03(\x05\"N\n\x11P4CoverageRequest\x12\x11\n\tdevice_id\x18\x01 \x01(\t\x12&\n\ttest_case\x18\x02 \x01(\x0b\x32\x13.p4testgen.TestCase\"9\n\x0fP4CoverageReply\x12&\n\ttest_case\x18\x01 \x01(\x0b\x32\x13.p4testgen.TestCase\"!\n\x12P4StatementRequest\x12\x0b\n\x03idx\x18\x01 \x01(\x05\"%\n\x10P4StatementReply\x12\x11\n\tstatement\x18\x01 \x01(\t\"1\n\x11InputPacketAtPort\x12\x0e\n\x06packet\x18\x01 \x01(\x0c\x12\x0c\n\x04port\x18\x02 \x01(\x05\"G\n\x12OutputPacketAtPort\x12\x0e\n\x06packet\x18\x01 \x01(\x0c\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x13\n\x0bpacket_mask\x18\x03 \x01(\x0c\"G\n\x0cPathCoverage\x12\x12\n\nblock_name\x18\x01 \x01(\t\x12\x10\n\x08path_val\x18\x02 \x01(\x0c\x12\x11\n\tpath_size\x18\x03 \x01(\x0c\"\x8f\x03\n\x08TestCase\x12\x32\n\x0cinput_packet\x18\x01 \x01(\x0b\x32\x1c.p4testgen.InputPacketAtPort\x12=\n\x16\x65xpected_output_packet\x18\x02 \x03(\x0b\x32\x1d.p4testgen.OutputPacketAtPort\x12\x1f\n\x08\x65ntities\x18\x03 \x03(\x0b\x32\r.p4.v1.Entity\x12\x0e\n\x06traces\x18\x04 \x03(\t\x12\x10\n\x08metadata\x18\x05 \x03(\t\x12\x17\n\x0fstmt_cov_bitmap\x18\x06 \x01(\x0c\x12\x15\n\rstmt_cov_size\x18\x07 \x01(\x05\x12\x19\n\x11\x61\x63tion_cov_bitmap\x18\x08 \x01(\x0c\x12\x17\n\x0f\x61\x63tion_cov_size\x18\t \x01(\x05\x12\x12\n\ntable_size\x18\n \x01(\x05\x12)\n\x08path_cov\x18\x0b \x03(\x0b\x32\x17.p4testgen.PathCoverage\x12\x13\n\x0bunsupported\x18\x0c \x01(\x05\x12\x15\n\rparser_states\x18\r \x03(\t2\xd4\x03\n\x0bP4FuzzGuide\x12H\n\x05Hello\x12\x1d.p4testgen.HealthCheckRequest\x1a\x1e.p4testgen.HealthCheckResponse\"\x00\x12?\n\tGetP4Name\x12\x18.p4testgen.P4NameRequest\x1a\x16.p4testgen.P4NameReply\"\x00\x12K\n\rGetP4Coverage\x12\x1c.p4testgen.P4CoverageRequest\x1a\x1a.p4testgen.P4CoverageReply\"\x00\x12M\n\x0fRecordP4Testgen\x12\x1c.p4testgen.P4CoverageRequest\x1a\x1a.p4testgen.P4CoverageReply\"\x00\x12N\n\x0eGetP4Statement\x12\x1d.p4testgen.P4StatementRequest\x1a\x1b.p4testgen.P4StatementReply\"\x00\x12N\n\x10GenRuleP4Testgen\x12\x1c.p4testgen.P4CoverageRequest\x1a\x1a.p4testgen.P4CoverageReply\"\x00\x62\x06proto3')
  ,
  dependencies=[p4_dot_v1_dot_p4runtime__pb2.DESCRIPTOR,])




_HEALTHCHECKREQUEST = _descriptor.Descriptor(
  name='HealthCheckRequest',
  full_name='p4testgen.HealthCheckRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='service', full_name='p4testgen.HealthCheckRequest.service', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=53,
  serialized_end=90,
)


_HEALTHCHECKRESPONSE = _descriptor.Descriptor(
  name='HealthCheckResponse',
  full_name='p4testgen.HealthCheckResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='p4testgen.HealthCheckResponse.status', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=92,
  serialized_end=129,
)


_P4NAMEREQUEST = _descriptor.Descriptor(
  name='P4NameRequest',
  full_name='p4testgen.P4NameRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entity_type', full_name='p4testgen.P4NameRequest.entity_type', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='target', full_name='p4testgen.P4NameRequest.target', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=131,
  serialized_end=183,
)


_P4NAMEREPLY = _descriptor.Descriptor(
  name='P4NameReply',
  full_name='p4testgen.P4NameReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entity_type', full_name='p4testgen.P4NameReply.entity_type', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='p4testgen.P4NameReply.name', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='p4testgen.P4NameReply.type', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bit_len', full_name='p4testgen.P4NameReply.bit_len', index=3,
      number=4, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=185,
  serialized_end=264,
)


_P4COVERAGEREQUEST = _descriptor.Descriptor(
  name='P4CoverageRequest',
  full_name='p4testgen.P4CoverageRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_id', full_name='p4testgen.P4CoverageRequest.device_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='test_case', full_name='p4testgen.P4CoverageRequest.test_case', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=266,
  serialized_end=344,
)


_P4COVERAGEREPLY = _descriptor.Descriptor(
  name='P4CoverageReply',
  full_name='p4testgen.P4CoverageReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='test_case', full_name='p4testgen.P4CoverageReply.test_case', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=346,
  serialized_end=403,
)


_P4STATEMENTREQUEST = _descriptor.Descriptor(
  name='P4StatementRequest',
  full_name='p4testgen.P4StatementRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='idx', full_name='p4testgen.P4StatementRequest.idx', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=405,
  serialized_end=438,
)


_P4STATEMENTREPLY = _descriptor.Descriptor(
  name='P4StatementReply',
  full_name='p4testgen.P4StatementReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='statement', full_name='p4testgen.P4StatementReply.statement', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=440,
  serialized_end=477,
)


_INPUTPACKETATPORT = _descriptor.Descriptor(
  name='InputPacketAtPort',
  full_name='p4testgen.InputPacketAtPort',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='packet', full_name='p4testgen.InputPacketAtPort.packet', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='port', full_name='p4testgen.InputPacketAtPort.port', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=479,
  serialized_end=528,
)


_OUTPUTPACKETATPORT = _descriptor.Descriptor(
  name='OutputPacketAtPort',
  full_name='p4testgen.OutputPacketAtPort',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='packet', full_name='p4testgen.OutputPacketAtPort.packet', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='port', full_name='p4testgen.OutputPacketAtPort.port', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='packet_mask', full_name='p4testgen.OutputPacketAtPort.packet_mask', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=530,
  serialized_end=601,
)


_PATHCOVERAGE = _descriptor.Descriptor(
  name='PathCoverage',
  full_name='p4testgen.PathCoverage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='block_name', full_name='p4testgen.PathCoverage.block_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='path_val', full_name='p4testgen.PathCoverage.path_val', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='path_size', full_name='p4testgen.PathCoverage.path_size', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=603,
  serialized_end=674,
)


_TESTCASE = _descriptor.Descriptor(
  name='TestCase',
  full_name='p4testgen.TestCase',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='input_packet', full_name='p4testgen.TestCase.input_packet', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='expected_output_packet', full_name='p4testgen.TestCase.expected_output_packet', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='entities', full_name='p4testgen.TestCase.entities', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='traces', full_name='p4testgen.TestCase.traces', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='metadata', full_name='p4testgen.TestCase.metadata', index=4,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stmt_cov_bitmap', full_name='p4testgen.TestCase.stmt_cov_bitmap', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stmt_cov_size', full_name='p4testgen.TestCase.stmt_cov_size', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='action_cov_bitmap', full_name='p4testgen.TestCase.action_cov_bitmap', index=7,
      number=8, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='action_cov_size', full_name='p4testgen.TestCase.action_cov_size', index=8,
      number=9, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='table_size', full_name='p4testgen.TestCase.table_size', index=9,
      number=10, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='path_cov', full_name='p4testgen.TestCase.path_cov', index=10,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='unsupported', full_name='p4testgen.TestCase.unsupported', index=11,
      number=12, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parser_states', full_name='p4testgen.TestCase.parser_states', index=12,
      number=13, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=677,
  serialized_end=1076,
)

_P4COVERAGEREQUEST.fields_by_name['test_case'].message_type = _TESTCASE
_P4COVERAGEREPLY.fields_by_name['test_case'].message_type = _TESTCASE
_TESTCASE.fields_by_name['input_packet'].message_type = _INPUTPACKETATPORT
_TESTCASE.fields_by_name['expected_output_packet'].message_type = _OUTPUTPACKETATPORT
_TESTCASE.fields_by_name['entities'].message_type = p4_dot_v1_dot_p4runtime__pb2._ENTITY
_TESTCASE.fields_by_name['path_cov'].message_type = _PATHCOVERAGE
DESCRIPTOR.message_types_by_name['HealthCheckRequest'] = _HEALTHCHECKREQUEST
DESCRIPTOR.message_types_by_name['HealthCheckResponse'] = _HEALTHCHECKRESPONSE
DESCRIPTOR.message_types_by_name['P4NameRequest'] = _P4NAMEREQUEST
DESCRIPTOR.message_types_by_name['P4NameReply'] = _P4NAMEREPLY
DESCRIPTOR.message_types_by_name['P4CoverageRequest'] = _P4COVERAGEREQUEST
DESCRIPTOR.message_types_by_name['P4CoverageReply'] = _P4COVERAGEREPLY
DESCRIPTOR.message_types_by_name['P4StatementRequest'] = _P4STATEMENTREQUEST
DESCRIPTOR.message_types_by_name['P4StatementReply'] = _P4STATEMENTREPLY
DESCRIPTOR.message_types_by_name['InputPacketAtPort'] = _INPUTPACKETATPORT
DESCRIPTOR.message_types_by_name['OutputPacketAtPort'] = _OUTPUTPACKETATPORT
DESCRIPTOR.message_types_by_name['PathCoverage'] = _PATHCOVERAGE
DESCRIPTOR.message_types_by_name['TestCase'] = _TESTCASE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

HealthCheckRequest = _reflection.GeneratedProtocolMessageType('HealthCheckRequest', (_message.Message,), dict(
  DESCRIPTOR = _HEALTHCHECKREQUEST,
  __module__ = 'p4testgen_pb2'
  # @@protoc_insertion_point(class_scope:p4testgen.HealthCheckRequest)
  ))
_sym_db.RegisterMessage(HealthCheckRequest)

HealthCheckResponse = _reflection.GeneratedProtocolMessageType('HealthCheckResponse', (_message.Message,), dict(
  DESCRIPTOR = _HEALTHCHECKRESPONSE,
  __module__ = 'p4testgen_pb2'
  # @@protoc_insertion_point(class_scope:p4testgen.HealthCheckResponse)
  ))
_sym_db.RegisterMessage(HealthCheckResponse)

P4NameRequest = _reflection.GeneratedProtocolMessageType('P4NameRequest', (_message.Message,), dict(
  DESCRIPTOR = _P4NAMEREQUEST,
  __module__ = 'p4testgen_pb2'
  # @@protoc_insertion_point(class_scope:p4testgen.P4NameRequest)
  ))
_sym_db.RegisterMessage(P4NameRequest)

P4NameReply = _reflection.GeneratedProtocolMessageType('P4NameReply', (_message.Message,), dict(
  DESCRIPTOR = _P4NAMEREPLY,
  __module__ = 'p4testgen_pb2'
  # @@protoc_insertion_point(class_scope:p4testgen.P4NameReply)
  ))
_sym_db.RegisterMessage(P4NameReply)

P4CoverageRequest = _reflection.GeneratedProtocolMessageType('P4CoverageRequest', (_message.Message,), dict(
  DESCRIPTOR = _P4COVERAGEREQUEST,
  __module__ = 'p4testgen_pb2'
  # @@protoc_insertion_point(class_scope:p4testgen.P4CoverageRequest)
  ))
_sym_db.RegisterMessage(P4CoverageRequest)

P4CoverageReply = _reflection.GeneratedProtocolMessageType('P4CoverageReply', (_message.Message,), dict(
  DESCRIPTOR = _P4COVERAGEREPLY,
  __module__ = 'p4testgen_pb2'
  # @@protoc_insertion_point(class_scope:p4testgen.P4CoverageReply)
  ))
_sym_db.RegisterMessage(P4CoverageReply)

P4StatementRequest = _reflection.GeneratedProtocolMessageType('P4StatementRequest', (_message.Message,), dict(
  DESCRIPTOR = _P4STATEMENTREQUEST,
  __module__ = 'p4testgen_pb2'
  # @@protoc_insertion_point(class_scope:p4testgen.P4StatementRequest)
  ))
_sym_db.RegisterMessage(P4StatementRequest)

P4StatementReply = _reflection.GeneratedProtocolMessageType('P4StatementReply', (_message.Message,), dict(
  DESCRIPTOR = _P4STATEMENTREPLY,
  __module__ = 'p4testgen_pb2'
  # @@protoc_insertion_point(class_scope:p4testgen.P4StatementReply)
  ))
_sym_db.RegisterMessage(P4StatementReply)

InputPacketAtPort = _reflection.GeneratedProtocolMessageType('InputPacketAtPort', (_message.Message,), dict(
  DESCRIPTOR = _INPUTPACKETATPORT,
  __module__ = 'p4testgen_pb2'
  # @@protoc_insertion_point(class_scope:p4testgen.InputPacketAtPort)
  ))
_sym_db.RegisterMessage(InputPacketAtPort)

OutputPacketAtPort = _reflection.GeneratedProtocolMessageType('OutputPacketAtPort', (_message.Message,), dict(
  DESCRIPTOR = _OUTPUTPACKETATPORT,
  __module__ = 'p4testgen_pb2'
  # @@protoc_insertion_point(class_scope:p4testgen.OutputPacketAtPort)
  ))
_sym_db.RegisterMessage(OutputPacketAtPort)

PathCoverage = _reflection.GeneratedProtocolMessageType('PathCoverage', (_message.Message,), dict(
  DESCRIPTOR = _PATHCOVERAGE,
  __module__ = 'p4testgen_pb2'
  # @@protoc_insertion_point(class_scope:p4testgen.PathCoverage)
  ))
_sym_db.RegisterMessage(PathCoverage)

TestCase = _reflection.GeneratedProtocolMessageType('TestCase', (_message.Message,), dict(
  DESCRIPTOR = _TESTCASE,
  __module__ = 'p4testgen_pb2'
  # @@protoc_insertion_point(class_scope:p4testgen.TestCase)
  ))
_sym_db.RegisterMessage(TestCase)



_P4FUZZGUIDE = _descriptor.ServiceDescriptor(
  name='P4FuzzGuide',
  full_name='p4testgen.P4FuzzGuide',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=1079,
  serialized_end=1547,
  methods=[
  _descriptor.MethodDescriptor(
    name='Hello',
    full_name='p4testgen.P4FuzzGuide.Hello',
    index=0,
    containing_service=None,
    input_type=_HEALTHCHECKREQUEST,
    output_type=_HEALTHCHECKRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetP4Name',
    full_name='p4testgen.P4FuzzGuide.GetP4Name',
    index=1,
    containing_service=None,
    input_type=_P4NAMEREQUEST,
    output_type=_P4NAMEREPLY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetP4Coverage',
    full_name='p4testgen.P4FuzzGuide.GetP4Coverage',
    index=2,
    containing_service=None,
    input_type=_P4COVERAGEREQUEST,
    output_type=_P4COVERAGEREPLY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RecordP4Testgen',
    full_name='p4testgen.P4FuzzGuide.RecordP4Testgen',
    index=3,
    containing_service=None,
    input_type=_P4COVERAGEREQUEST,
    output_type=_P4COVERAGEREPLY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetP4Statement',
    full_name='p4testgen.P4FuzzGuide.GetP4Statement',
    index=4,
    containing_service=None,
    input_type=_P4STATEMENTREQUEST,
    output_type=_P4STATEMENTREPLY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GenRuleP4Testgen',
    full_name='p4testgen.P4FuzzGuide.GenRuleP4Testgen',
    index=5,
    containing_service=None,
    input_type=_P4COVERAGEREQUEST,
    output_type=_P4COVERAGEREPLY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_P4FUZZGUIDE)

DESCRIPTOR.services_by_name['P4FuzzGuide'] = _P4FUZZGUIDE

# @@protoc_insertion_point(module_scope)
